#include<stdio.h>
#include<stdlib.h>
typedef struct node{
    int data;
    struct node *next;

} node;
node* head = NULL;
node* createNode(int ele){
    node* newNode = (node*)malloc(sizeof(node));
    newNode->data = ele;
    newNode->next = NULL;
    return newNode;
}
void insertNodeInBeg(int ele){
    node* newNode = createNode(ele);
    newNode->next = head;
    head = newNode;
    printf("Node Inserted !!!!!\n");
}
void insertNodeAtEnd(int ele){
    node* newNode = createNode(ele);
    if(head==NULL){
        head = newNode;
    }
    else{
        node* temp = head;
        while(temp->next!=NULL){
            temp = temp->next;
        }
        temp->next = newNode;
    }
    printf("Node Inserted !!!!!\n");
}
void insertNodeAtAnyPos(int ele,int pos){
    if(head == NULL)
    {
        printf("List is Empty !!!!!\n");
    }
    else if(pos==1){
        insertNodeInBeg(ele);
    }
    else{
        node* newNode = createNode(ele);
        node* temp = head;
        int i=1;
        while(i<pos-1 && temp->next!=NULL){
            temp = temp->next;
            i++;
        }
        if(temp->next!=NULL){
            newNode->next = temp->next;
            temp->next = newNode;
            printf("Node Inserted !!!!!\n");
        }
        else{
            printf("Position is Invalid !!!!!\n");
        }   
    }
}
void display(){
    if(head==NULL){
        printf("List is Empty !!!!!\n");
    }
    else{
        printf("Elements are : \n");
        node* temp = head;
        while(temp!=NULL){
            printf("%d ",temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}
int main(){
    while(1){
        printf("------Singly Linked List ------\n");
        printf("1. Insert Node In Begining\n");
        printf("2. Insert Node At End\n");
        printf("3. Insert Node At Any Position\n");
        printf("4. Delete Node From Beginning\n");
        printf("5. Delete Node From End\n");
        printf("6. Delete Node From Any Position\n");
        printf("7. Search Element In List\n");
        printf("8. Sort Elements\n");
        printf("9. Display List\n");
        printf("10. Exit\n\n");
    int choice,value,pos;
    printf("enter choice : ");
    scanf("%d",&choice);
    switch (choice) {
        case 1:
            printf("Enter value: ");
            scanf("%d", &value);
            insertNodeInBeg(value);
            break;
        case 2:
            printf("Enter value: ");
            scanf("%d", &value);
            insertNodeAtEnd(value);
            break;
        case 3:
            printf("Enter value: ");
            scanf("%d", &value);
            printf("Enter position: ");
            scanf("%d", &pos);
            insertNodeAtAnyPos(value, pos);
            break;
        case 4:
            break;
        case 5:
            break;
        case 6:
            break;
        case 7:
        break;
        case 8:
        break;
        case 9:
        display();
        break;
        case 10:
        exit(0);
        default:
        printf("invaild choice !!!!!\n");
    }
    printf("\n");
    }
    return 0;
}
